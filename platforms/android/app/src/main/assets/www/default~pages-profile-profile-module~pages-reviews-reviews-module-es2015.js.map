{"version":3,"sources":["./node_modules/ngx-ionic-image-viewer/fesm2015/ngx-ionic-image-viewer.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyK;AACvI;AAC4B;AACf;;AAE/C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,mBAAmB;AACnB;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,aAAa;AACb;AACA;AACA;AACA,gEAAgE,wEAAkB,EAAE,yDAAyD,yCAAyC,EAAE,yDAAyD;;AAEjP;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,uDAAuD,SAAS,SAAS,SAAS,uBAAuB,iBAAiB;AAC1H,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,eAAe;AAC9B,0CAA0C,oBAAoB,gHAAgH;AAC9K;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,gFAAgF;AAC/F,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,0CAA0C,oBAAoB,0BAA0B;AACxF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,oDAAoD,gCAAgC,uPAAuP,SAAS,mYAAmY,8BAA8B,gEAAgE,QAAQ;AAC7zB,qCAAqC,cAAc,YAAY,YAAY,oBAAoB,yEAAyE,gEAAgE,WAAW,UAAU,kBAAkB,0BAA0B,aAAa,gCAAgC,8BAA8B,yBAAyB,WAAW,kBAAkB,SAAS,0BAA0B,aAAa,+BAA+B,8BAA8B,yBAAyB;AAChjB,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,8DAAe;AAC3B;AACA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","file":"default~pages-profile-profile-module~pages-reviews-reviews-module-es2015.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, Component, Input, ViewChild, ViewEncapsulation, Directive, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { ModalController, IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-ionic-image-viewer.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxIonicImageViewerService {\n    constructor() { }\n}\nNgxIonicImageViewerService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root'\n            },] }\n];\n/** @nocollapse */\nNgxIonicImageViewerService.ctorParameters = () => [];\n/** @nocollapse */ NgxIonicImageViewerService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgxIonicImageViewerService_Factory() { return new NgxIonicImageViewerService(); }, token: NgxIonicImageViewerService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/viewer-modal/viewer-modal.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ViewerModalComponent {\n    /**\n     * @param {?} modalController\n     */\n    constructor(modalController) {\n        this.modalController = modalController;\n        // tslint:disable: no-inferrable-types\n        this.alt = '';\n        this.scheme = 'auto';\n        this.slideOptions = {};\n        this.srcFallback = '';\n        this.srcHighRes = '';\n        this.swipeToClose = true;\n        this.text = '';\n        this.title = '';\n        this.titleSize = '';\n        // tslint:enable: no-inferrable-types\n        this.defaultSlideOptions = {\n            centeredSlides: true,\n            passiveListeners: false,\n            zoom: {\n                enabled: true,\n            },\n        };\n        this.options = {};\n        this.swipeState = {\n            phase: 'init',\n            direction: 'none',\n            swipeType: 'none',\n            startX: 0,\n            startY: 0,\n            distance: 0,\n            distanceX: 0,\n            distanceY: 0,\n            threshold: 150,\n            // required min distance traveled to be considered swipe\n            restraint: 100,\n            // maximum distance allowed at the same time in perpendicular direction\n            allowedTime: 500,\n            // maximum time allowed to travel that distance\n            elapsedTime: 0,\n            startTime: 0,\n        };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.options = Object.assign({}, this.defaultSlideOptions, this.slideOptions);\n            this.src = this.srcHighRes || this.src;\n            this.setStyle();\n            this.setScheme(this.scheme);\n            this.initSwipeToClose(this.swipeToClose);\n            /**\n             * Current Workaround\n             * See reported bug: https://github.com/ionic-team/ionic/issues/19638#issuecomment-584828315\n             * Hint: Comment in '<ion-slide>' in component\n             * @type {?}\n             */\n            const swiper = yield this.slides.getSwiper();\n            swiper.appendSlide(`<ion-slide><img alt=\"${this.alt}\" src=\"${this.src}\" onerror=\"this.src='${this.srcFallback}'\"/></ion-slide>`);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    setStyle() {\n        /** @type {?} */\n        const el = document.querySelector('.ion-img-viewer');\n        el.style.setProperty('--height', '100%');\n        el.style.setProperty('--width', '100%');\n        el.style.setProperty('--border-radius', '0');\n    }\n    /**\n     * @param {?} scheme\n     * @return {?}\n     */\n    setScheme(scheme) {\n        if (scheme === 'auto') {\n            return;\n        }\n        /** @type {?} */\n        const el = document.querySelector('.ion-img-viewer');\n        if (this.scheme === 'light') {\n            el.style.setProperty('--ion-background-color', '#ffffff');\n            el.style.setProperty('--ion-background-color-rgb', '255, 255, 255');\n            el.style.setProperty('--ion-text-color', '#000');\n            el.style.setProperty('--ion-text-color-rgb', '0,0,0');\n        }\n        if (this.scheme === 'dark') {\n            if (el.classList.contains('ios')) {\n                el.style.setProperty('--ion-background-color', '#000000');\n                el.style.setProperty('--ion-background-color-rgb', '0, 0, 0');\n            }\n            else {\n                el.style.setProperty('--ion-background-color', '#121212');\n                el.style.setProperty('--ion-background-color-rgb', '18,18,18');\n            }\n            el.style.setProperty('--ion-text-color', '#ffffff');\n            el.style.setProperty('--ion-text-color-rgb', '255,255,255');\n        }\n    }\n    /**\n     * @see http://www.javascriptkit.com/javatutors/touchevents3.shtml\n     * @param {?=} isActive\n     * @return {?}\n     */\n    initSwipeToClose(isActive = true) {\n        if (!isActive) {\n            return;\n        }\n        /** @type {?} */\n        const el = document.querySelector('ion-modal');\n        el.addEventListener('mousedown', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.swipeStart(event)), true);\n        el.addEventListener('mousemove', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.swipeMove(event)), true);\n        el.addEventListener('mouseup', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.swipeEnd(event)), true);\n        el.addEventListener('touchstart', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.swipeStart(event)), true);\n        el.addEventListener('touchmove', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.swipeMove(event)), true);\n        el.addEventListener('touchend', (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this.swipeEnd(event)), true);\n        this.modalController.getTop().then((/**\n         * @param {?} modal\n         * @return {?}\n         */\n        (modal) => {\n            modal.onWillDismiss().then((/**\n             * @return {?}\n             */\n            () => {\n                document.removeEventListener('mousedown', this.swipeStart, true);\n                document.removeEventListener('mousemove', this.swipeMove, true);\n                document.removeEventListener('mouseup', this.swipeMove, true);\n                document.removeEventListener('touchstart', this.swipeStart, true);\n                document.removeEventListener('touchmove', this.swipeMove, true);\n                document.removeEventListener('touchend', this.swipeMove, true);\n            }));\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    swipeStart(event) {\n        const { pageX, pageY } = event.type === 'touchstart' ? event.changedTouches[0] : event;\n        this.swipeState = Object.assign({}, this.swipeState, { phase: 'start', direction: 'none', distance: 0, startX: pageX, startY: pageY, startTime: new Date().getTime() });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    swipeMove(event) {\n        if (this.swipeState.phase === 'none') {\n            return;\n        }\n        const { pageX, pageY } = event.type === 'touchmove' ? event.changedTouches[0] : event;\n        // get horizontal dist traveled by finger while in contact with surface\n        /** @type {?} */\n        const distanceX = pageX - this.swipeState.startX;\n        // get vertical dist traveled by finger while in contact with surface\n        /** @type {?} */\n        const distanceY = pageY - this.swipeState.startY;\n        /** @type {?} */\n        let direction;\n        /** @type {?} */\n        let distance;\n        if (Math.abs(distanceX) > Math.abs(distanceY)) {\n            // if distance traveled horizontally is greater than vertically, consider this a horizontal swipe\n            direction = distanceX < 0 ? 'left' : 'right';\n            distance = distanceX;\n        }\n        else {\n            // else consider this a vertical swipe\n            direction = distanceY < 0 ? 'up' : 'down';\n            distance = distanceY;\n        }\n        this.swipeState = Object.assign({}, this.swipeState, { phase: 'move', direction,\n            distance,\n            distanceX,\n            distanceY });\n        event.preventDefault();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    swipeEnd(event) {\n        if (this.swipeState.phase === 'none') {\n            return;\n        }\n        const { allowedTime, direction, restraint, startTime, threshold, distanceX, distanceY } = this.swipeState;\n        /** @type {?} */\n        let swipeType;\n        /** @type {?} */\n        const elapsedTime = new Date().getTime() - startTime;\n        if (elapsedTime <= allowedTime) {\n            // first condition for a swipe met\n            if (Math.abs(distanceX) >= threshold && Math.abs(distanceY) <= restraint) {\n                // 2nd condition for horizontal swipe met\n                swipeType = direction; // set swipeType to either \"left\" or \"right\"\n            }\n            else if (Math.abs(distanceY) >= threshold && Math.abs(distanceX) <= restraint) {\n                // 2nd condition for vertical swipe met\n                swipeType = direction; // set swipeType to either \"top\" or \"down\"\n            }\n        }\n        this.swipeState = Object.assign({}, this.swipeState, { phase: 'end', swipeType });\n        if (swipeType === 'down') {\n            return this.closeModal();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    closeModal() {\n        this.modalController.dismiss();\n    }\n}\nViewerModalComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-viewer-modal',\n                template: \"<ion-header [ngClass]=\\\"{ 'no-title': title.length <= 0 }\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"closeModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title [size]=\\\"titleSize\\\">{{ title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [forceOverscroll]=\\\"false\\\">\\n  <ion-slides [options]=\\\"options\\\" #sliderRef>\\n    <!-- <ion-slide>\\n      <div class=\\\"swiper-zoom-container\\\">\\n        <img [alt]=\\\"this.alt\\\" [src]=\\\"this.src\\\" (error)=\\\"onError($event)\\\" />\\n      </div>\\n    </ion-slide> -->\\n  </ion-slides>\\n</ion-content>\\n\\n<ion-footer [ngClass]=\\\"{ 'no-text': text.length <= 0 }\\\">\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\n    <ion-text>{{ text }}</ion-text>\\n  </ion-toolbar>\\n</ion-footer>\\n\",\n                styles: [\"ion-slides{--height:100%;height:100%}ion-toolbar{--border-style:none;--background:rgba(var(--ion-background-color-rgb, (255, 255, 255)), 0.6);background:rgba(var(--ion-background-color-rgb,255,255,255),.6)}ion-header{opacity:1;position:absolute}ion-header.no-title:after{content:none}ion-header.no-title ion-toolbar{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}ion-footer{position:absolute;bottom:0}ion-footer.no-text:before{content:none}ion-footer.no-text ion-toolbar{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}\"]\n            }] }\n];\n/** @nocollapse */\nViewerModalComponent.ctorParameters = () => [\n    { type: ModalController }\n];\nViewerModalComponent.propDecorators = {\n    alt: [{ type: Input }],\n    scheme: [{ type: Input }],\n    slideOptions: [{ type: Input }],\n    src: [{ type: Input }],\n    srcFallback: [{ type: Input }],\n    srcHighRes: [{ type: Input }],\n    swipeToClose: [{ type: Input }],\n    text: [{ type: Input }],\n    title: [{ type: Input }],\n    titleSize: [{ type: Input }],\n    slides: [{ type: ViewChild, args: ['sliderRef', { static: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    ViewerModalComponent.prototype.alt;\n    /** @type {?} */\n    ViewerModalComponent.prototype.scheme;\n    /** @type {?} */\n    ViewerModalComponent.prototype.slideOptions;\n    /** @type {?} */\n    ViewerModalComponent.prototype.src;\n    /** @type {?} */\n    ViewerModalComponent.prototype.srcFallback;\n    /** @type {?} */\n    ViewerModalComponent.prototype.srcHighRes;\n    /** @type {?} */\n    ViewerModalComponent.prototype.swipeToClose;\n    /** @type {?} */\n    ViewerModalComponent.prototype.text;\n    /** @type {?} */\n    ViewerModalComponent.prototype.title;\n    /** @type {?} */\n    ViewerModalComponent.prototype.titleSize;\n    /** @type {?} */\n    ViewerModalComponent.prototype.defaultSlideOptions;\n    /** @type {?} */\n    ViewerModalComponent.prototype.options;\n    /** @type {?} */\n    ViewerModalComponent.prototype.swipeState;\n    /** @type {?} */\n    ViewerModalComponent.prototype.slides;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewerModalComponent.prototype.modalController;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-ionic-image-viewer.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxIonicImageViewerComponent {\n    /**\n     * @param {?} modalController\n     */\n    constructor(modalController) {\n        this.modalController = modalController;\n    }\n    /**\n     * @param {?} src\n     * @param {?=} srcFallback\n     * @param {?=} srcHighRes\n     * @param {?=} title\n     * @param {?=} titleSize\n     * @param {?=} text\n     * @param {?=} scheme\n     * @param {?=} slideOptions\n     * @param {?=} swipeToClose\n     * @return {?}\n     */\n    viewImage(src, srcFallback = '', srcHighRes = '', title = '', titleSize = '', text = '', scheme = 'auto', slideOptions = {}, swipeToClose = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const modal = yield this.modalController.create({\n                component: ViewerModalComponent,\n                componentProps: {\n                    src,\n                    srcFallback,\n                    srcHighRes,\n                    title,\n                    titleSize,\n                    text,\n                    scheme,\n                    slideOptions,\n                    swipeToClose\n                },\n                cssClass: this.cssClass instanceof Array ? ['ion-img-viewer', ...this.cssClass] : ['ion-img-viewer', this.cssClass],\n                keyboardClose: true,\n                showBackdrop: true\n            });\n            return yield modal.present();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { }\n}\nNgxIonicImageViewerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-img-viewer',\n                template: \"<img\\n  [alt]=\\\"alt\\\"\\n  [src]=\\\"src\\\"\\n  (click)=\\\"viewImage(src, srcFallback, srcHighRes, title, titleSize, text, scheme, slideOptions, swipeToClose)\\\"\\n  (error)=\\\"src = srcFallback\\\"\\n/>\\n\",\n                encapsulation: ViewEncapsulation.Emulated,\n                styles: [`\n      :host {\n        display: block;\n      }\n    `]\n            }] }\n];\n/** @nocollapse */\nNgxIonicImageViewerComponent.ctorParameters = () => [\n    { type: ModalController }\n];\nNgxIonicImageViewerComponent.propDecorators = {\n    alt: [{ type: Input }],\n    cssClass: [{ type: Input }],\n    scheme: [{ type: Input }],\n    slideOptions: [{ type: Input }],\n    src: [{ type: Input }],\n    srcFallback: [{ type: Input }],\n    srcHighRes: [{ type: Input }],\n    swipeToClose: [{ type: Input }],\n    text: [{ type: Input }],\n    title: [{ type: Input }],\n    titleSize: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.alt;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.cssClass;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.scheme;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.slideOptions;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.src;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.srcFallback;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.srcHighRes;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.swipeToClose;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.text;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.title;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.titleSize;\n    /** @type {?} */\n    NgxIonicImageViewerComponent.prototype.modalController;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-ionic-image-viewer.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxIonicImageViewerDirective {\n    /**\n     * @param {?} el\n     * @param {?} renderer\n     * @param {?} modalController\n     */\n    constructor(el, renderer, modalController) {\n        this.el = el;\n        this.renderer = renderer;\n        this.modalController = modalController;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.viewImage(this.src, this.srcFallback, this.srcHighRes, this.title, this.titleSize, this.text, this.scheme, this.slideOptions, this.swipeToClose);\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    onError(error) {\n        if (this.src !== this.el.nativeElement.src) {\n            this.src = this.el.nativeElement.src;\n        }\n        if (this.srcFallback) {\n            this.renderer.setAttribute(this.el.nativeElement, 'src', this.srcFallback);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.el.nativeElement.hasAttribute('src')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'src', this.src);\n        }\n    }\n    /**\n     * @param {?} src\n     * @param {?=} srcFallback\n     * @param {?=} srcHighRes\n     * @param {?=} title\n     * @param {?=} titleSize\n     * @param {?=} text\n     * @param {?=} scheme\n     * @param {?=} slideOptions\n     * @param {?=} swipeToClose\n     * @return {?}\n     */\n    viewImage(src, srcFallback = '', srcHighRes = '', title = '', titleSize = '', text = '', scheme = 'auto', slideOptions = {}, swipeToClose = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const modal = yield this.modalController.create({\n                component: ViewerModalComponent,\n                componentProps: {\n                    src,\n                    srcFallback,\n                    srcHighRes,\n                    title,\n                    titleSize,\n                    text,\n                    scheme,\n                    slideOptions,\n                    swipeToClose\n                },\n                cssClass: this.cssClass instanceof Array ? ['ion-img-viewer', ...this.cssClass] : ['ion-img-viewer', this.cssClass],\n                keyboardClose: true,\n                showBackdrop: true\n            });\n            return yield modal.present();\n        });\n    }\n}\nNgxIonicImageViewerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ionImgViewer]'\n            },] }\n];\n/** @nocollapse */\nNgxIonicImageViewerDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ModalController }\n];\nNgxIonicImageViewerDirective.propDecorators = {\n    cssClass: [{ type: Input }],\n    scheme: [{ type: Input }],\n    slideOptions: [{ type: Input }],\n    src: [{ type: Input }],\n    srcFallback: [{ type: Input }],\n    srcHighRes: [{ type: Input }],\n    swipeToClose: [{ type: Input }],\n    text: [{ type: Input }],\n    title: [{ type: Input }],\n    titleSize: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }],\n    onError: [{ type: HostListener, args: ['error', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.cssClass;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.scheme;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.slideOptions;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.src;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.srcFallback;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.srcHighRes;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.swipeToClose;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.text;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.title;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.titleSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxIonicImageViewerDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgxIonicImageViewerDirective.prototype.renderer;\n    /** @type {?} */\n    NgxIonicImageViewerDirective.prototype.modalController;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-ionic-image-viewer.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxIonicImageViewerModule {\n}\nNgxIonicImageViewerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NgxIonicImageViewerComponent, NgxIonicImageViewerDirective, ViewerModalComponent],\n                imports: [CommonModule, IonicModule],\n                entryComponents: [ViewerModalComponent],\n                exports: [NgxIonicImageViewerComponent, NgxIonicImageViewerDirective, ViewerModalComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-ionic-image-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxIonicImageViewerComponent, NgxIonicImageViewerDirective, NgxIonicImageViewerModule, NgxIonicImageViewerService, ViewerModalComponent };\n//# sourceMappingURL=ngx-ionic-image-viewer.js.map\n"],"sourceRoot":"webpack:///"}